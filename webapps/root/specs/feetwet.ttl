#
# API endpoints for accessing the data at the SPARQL endpoint
# http://services.data.gov.uk/education/sparql
#
# This is a big file, but don't worry: after about line 200 it's
# all vocabulary definitions, giving types, short names, and
# ranges to properties. 
#

@prefix spec: <http://services.data.gov.uk/education/api#> .
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix geo:     <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix school:  <http://education.data.gov.uk/def/school/> .
@prefix spatialrelations:  <http://data.ordnancesurvey.co.uk/ontology/spatialrelations/> .
@prefix extras: <http://www.epimorphics.com/vocabularies/lda#> .
@prefix ids: <http://education.data.gov.uk/id/school/>.
@prefix :    <http://semanticdays.org/workshop/> .
@prefix voc:   <http://www.posccaesar.org/wiki/PCA/SemanticDays2013/Tutorial/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

##########################################################################################################
##################################      FOAF APIen      #################################################
##########################################################################################################


<http://services.data.gov.uk/education/sparql> extras:supportsNestedSelect false.

spec:apiPerson a api:API 
    ; rdfs:label "FOAF api"@no
    ; api:maxPageSize "50"
    ; api:defaultPageSize "10" 
    ; api:contentNegotiation api:parameterBased
    ; api:sparqlEndpoint <http://localhost:3030/dataset/query>
    ; rdfs:comment "An API for persons."
    ; api:endpoint spec:person, spec:persons, spec:projects, spec:project, spec:skill, spec:skills
           
    # normally constructed URIs (for views, formatters, metadata, etc) are based
    # on the context root of the request. If api:base is set, then it is used as
    # the root instead.
    #
    #  ; api:base "http://localhost"
    
    # activeImageBase is used by the stylesheet to specify the server-relative
    # location for active image icons; likewise inactiveImageBase for inactive
    # icons. _resourceRoot is used as the (possibly relative) root for URIs
    # constructed by the stylesheet for possibly-shared resources. webapp is
    # the webapp root name.
    #
    ; api:variable
	[api:name "activeImageBase"; api:value "/images/green/16x16"]
      , [api:name "inactiveImageBase"; api:value "/images/grey/16x16"]
      , [api:name "_resourceRoot"; api:value "/"]
      , [api:name "webapp"; api:value "/root"]
	#
	# the default html formatter invokes the XSLT stylesheet. It will normally
	# be pulled in by a browsers default accept-header, but it can be specified
	# explicitly using the .html suffix on the URI path.
	#
	; api:formatter 
		[a api:XsltFormatter
		; api:name 'html'
		; api:stylesheet 'xsltsheets/result-osm.xsl' 
        # ; api:stylesheet 'xsltsheets/ashtml.xsl'    
		; extras:metadataOptions "bindings,formats,versions,execution"
		; api:mimeType 'text/html; charset=utf-8'
		] 
	#
	# as an alternative, a non-default html formatter with the name
	# 'plainhtml' produces a very simple html rendering of the view.
	#
	# the turtle, rdf/xml, and json renderers are builtin and don't
	# need specification in this config file.
	#
	; api:formatter
		[a api:HtmlFormatter
		; extras:className "com.epimorphics.lda.demo.Demo_HTML_RendererFactory"
		; api:name "plainhtml"
		; api:mimeType 'text/htmlx'
		]
	#
	# Magic variables.
	#
	# _suppress_ipto, if set to "yes", causes the isPrimaryTopicOf item
	# endpoints to be suppressed, to avoid tickling a stylesheet infelicity.
	#
	; api:variable [api:name "_suppress_ipto"; api:value "yes"]
    #
    # causes property names starting "hasX", with some capital letter
    # 'X', to start with 'x' instead, to bypass a stylesheet infelicity.
    #
    ; api:variable [api:name "_strip_has"; api:value "yes"]        
    #
    # don't suppress media-type selection of renderer
    # (if you need to, set it to "yes")
    #
    ; api:variable [api:name "_supress_media_type"; api:value "no"]
    
    ; api:variable [api:name "_sgvizler"; api:value "squeeze"]				
    .

####################################################################################    
############################# PERSONER ###############################################  

spec:viewerNone a api:Viewer
    ; api:name "Display only URI-names"
    .


spec:personWithSkillsViewer a api:Viewer
    ; api:name "Display skills"
    ; api:properties "firstName"
    ; api:properties "lastName"
    ; api:properties "hasProfiency.characterizes.skillType"
    ; api:properties "hasProfiency.skillLevel"
    ; api:properties "hasAvailability.mustFitWith.*"
    .

spec:nameViewer a api:Viewer
    ; api:name "Display only names"
    ; api:properties "firstName"
    ; api:properties "lastName"
    .


###################### En paginert liste over alle personer ############################

spec:persons
	a api:ListEndpoint
	; rdfs:comment "Dette endepunktet viser personer fra Semantisk Web workshopen."
	; api:uriTemplate "person" 
	; api:selector [ 
   	  				api:filter	"type=Person"
		           ] 
	; api:formatter
     [ a api:XsltFormatter
	    ; api:name 'html'
      	; api:stylesheet 'xsltsheets/result-osm.xsl'
      	; extras:metadataOptions "bindings,formats,versions,execution"
      	; api:mimeType 'text/html; charset=utf-8'
	 ]
	; api:viewer spec:personWithSkillsViewer
    ; api:viewer spec:nameViewer
	; api:defaultViewer spec:nameViewer
	.



###################### ItemEndpoint for a specific PERSON ########################

spec:person
      a api:ItemEndpoint
      ; api:uriTemplate "person/{id}"
      ; api:itemTemplate "http://semanticdays.org/workshop/person/{id}"
      ; api:formatter 
      	  [ a api:XsltFormatter
	    ; api:name 'html'
		    ; api:stylesheet 'xsltsheets/result-osm-person.xsl' 
      	    ; extras:metadataOptions "bindings,formats,versions,execution"
      	    ; api:mimeType 'text/html'
	    ]              
      ; api:variable [ 
      		       api:name "person";
                       api:value "http://semanticdays.org/workshop/person/{id}";
		       api:type rdfs:Resource;]
	; api:viewer api:describeViewer
	; api:viewer spec:personWithSkillsViewer
    ; api:defaultViewer spec:personWithSkillsViewer
	.


############################# PROJECTS ###############################################

spec:projectDetailsViewer a api:Viewer
    ; api:name "Display details"
    ; api:properties "projectTitle"
    ; api:properties "needs.skillType"
    ; api:properties "lastsFor.*"
    .

spec:projectNameViewer a api:Viewer
    ; api:name "Display only names"
    ; api:properties "projectTitle"
    .

###################### Projects list ############################

spec:projects
	a api:ListEndpoint
	; rdfs:comment "Projects from the Semantic Web workshop."
	; api:uriTemplate "project"
	; api:selector [
   	  				api:filter	"type=Project"
		           ]
	; api:formatter
     [ a api:XsltFormatter
	    ; api:name 'html'
      	; api:stylesheet 'xsltsheets/result-osm.xsl'
        ; extras:metadataOptions "bindings,formats,versions,execution"
      	; api:mimeType 'text/html; charset=utf-8'
	 ]
	; api:viewer spec:projectDetailsViewer
    ; api:viewer spec:projectNameViewer
	; api:defaultViewer spec:projectNameViewer
	.


###################### ItemEndpoint for a specific project  ########################

spec:project
      a api:ItemEndpoint
      ; api:uriTemplate "project/{id}"
      ; api:itemTemplate "http://semanticdays.org/workshop/project/{id}"
      ; api:formatter
      	  [ a api:XsltFormatter
	    ; api:name 'html'
		    ; api:stylesheet 'xsltsheets/result-osm-person.xsl'
      	    ; extras:metadataOptions "bindings,formats,versions,execution"
      	    ; api:mimeType 'text/html'
	    ]
      ; api:variable [
      		       api:name "project";
                       api:value "http://semanticdays.org/workshop/project/{id}";
		       api:type rdfs:Resource;]
	; api:viewer api:describeViewer
	; api:viewer spec:projectDetailsViewer
    ; api:defaultViewer spec:projectDetailsViewer
	.


############################# SKILLS ###############################################


###################### Skills list ############################

spec:skills
	a api:ListEndpoint
	; rdfs:comment "Skills from the Semantic Web workshop."
	; api:uriTemplate "skill"
	; api:selector [
   	  				api:filter	"type=Skill"
		           ]
	; api:formatter
     [ a api:XsltFormatter
	    ; api:name 'html'
      	; api:stylesheet 'xsltsheets/result-osm.xsl'
      	; extras:metadataOptions "bindings,formats,versions,execution"
      	; api:mimeType 'text/html; charset=utf-8'
	 ]
.

###################### ItemEndpoint for a specific skill  ########################

spec:skill
      a api:ItemEndpoint
      ; api:uriTemplate "skill/{id}"
      ; api:itemTemplate "http://semanticdays.org/workshop/skill/{id}"
      ; api:formatter
      	  [ a api:XsltFormatter
	    ; api:name 'html'
		    ; api:stylesheet 'xsltsheets/result-osm-person.xsl'
      	    ; extras:metadataOptions "bindings,formats,versions,execution"
      	    ; api:mimeType 'text/html'
	    ]
.


####################################################################################################
################################################ Vokabular #########################################
####################################################################################################


# The vocabulary declarations say which properties can be used in queries
# and by what short name those properties are known. If property P with short
# name Q has range type T, then a query parameters Q=V is translated to
# a WHERE clause fragment ?item P V' where V' is a literal which is V
# with type T. This is especially important for numbers and booleans.

#################### voc #######################

voc:Person api:label "Person" .
voc:Project api:label "Project" .
voc:firstName api:label "firstName" .
voc:lastName api:label "lastName" .
voc:hasAvailability api:label "hasAvailability" .
voc:contributesTo api:label "contributesTo" .
voc:hasProfiency api:label "hasProfiency" .
voc:characterizes api:label "characterizes" .
voc:Skill api:label "Skill" .
voc:enables api:label "enables" .
voc:needs api:label "needs" .
voc:Profiency api:label "Profiency" .
voc:skillLevel api:label "skillLevel" .
voc:projectTitle api:label "projectTitle" .
voc:Contribution api:label "Contribution" .
voc:Availability api:label "Availability" .
voc:durationFrom api:label "durationFrom" .
voc:Period api:label "Period" .
voc:durationTo api:label "durationTo" .
voc:lastsFor api:label "lastsFor" .
voc:setsFrameFor api:label "setsFrameFor" .
voc:mustFitWith api:label "mustFitWith" .
voc:skillType api:label "skillType" .
voc:dependsUpon api:label "dependsUpon" .


################## RDF/s ###########################

rdf:type
    api:label "type"
    ; rdfs:range rdfs:Class
    .  


########################## Api ##########################
      
api:definition a rdf:Property
    ; api:label "definition"
    .  

api:definition a rdf:Property
    ; api:label "definition"
    .  
