#
# API endpoints for accessing the data at the SPARQL endpoint
# http://services.data.gov.uk/education/sparql
#
# This is a big file, but don't worry: after about line 200 it's
# all vocabulary definitions, giving types, short names, and
# ranges to properties. 
#

@prefix spec: <http://services.data.gov.uk/education/api#> .
@prefix api:     <http://purl.org/linked-data/api/vocab#> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix geo:     <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix school:  <http://education.data.gov.uk/def/school/> .
@prefix spatialrelations:  <http://data.ordnancesurvey.co.uk/ontology/spatialrelations/> .
@prefix extras: <http://www.epimorphics.com/vocabularies/lda#> .
@prefix ids: <http://education.data.gov.uk/id/school/>.
@prefix :    <http://data.computas.com/semwebworkshop/person/> .

@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

##########################################################################################################
##################################      FOAF APIen      #################################################
##########################################################################################################


<http://services.data.gov.uk/education/sparql> extras:supportsNestedSelect false.

spec:apiPerson a api:API 
    ; rdfs:label "FOAF api"@no
    ; api:maxPageSize "50"
    ; api:defaultPageSize "10" 
    ; api:contentNegotiation api:parameterBased
  #  ; api:sparqlEndpoint <http://localhost:7001/joseki/oracle>
  #  ; api:sparqlEndpoint <http://localhost:3030/dataset/query>
  #  ; api:sparqlEndpoint <http://localhost:3050/dataset/query>
    ; api:sparqlEndpoint <http://localhost:3030/dataset/query>
    ; rdfs:comment "En API for FOAF."
    ; api:endpoint spec:person, spec:personer 
           
    # normally constructed URIs (for views, formatters, metadata, etc) are based
    # on the context root of the request. If api:base is set, then it is used as
    # the root instead.
    #
    #  ; api:base "http://localhost"
    
    # activeImageBase is used by the stylesheet to specify the server-relative
    # location for active image icons; likewise inactiveImageBase for inactive
    # icons. _resourceRoot is used as the (possibly relative) root for URIs
    # constructed by the stylesheet for possibly-shared resources. webapp is
    # the webapp root name.
    #
    ; api:variable
	[api:name "activeImageBase"; api:value "/images/green/16x16"]
      , [api:name "inactiveImageBase"; api:value "/images/grey/16x16"]
      , [api:name "_resourceRoot"; api:value "/"]
      , [api:name "webapp"; api:value "/root"]
	#
	# the default html formatter invokes the XSLT stylesheet. It will normally
	# be pulled in by a browsers default accept-header, but it can be specified
	# explicitly using the .html suffix on the URI path.
	#
	; api:formatter 
		[a api:XsltFormatter
		; api:name 'html'
		; api:stylesheet 'xsltsheets/result-osm.xsl' 
        # ; api:stylesheet 'xsltsheets/ashtml.xsl'    
		; extras:metadataOptions "bindings,formats,versions,execution"
		; api:mimeType 'text/html; charset=utf-8'
		] 
	#
	# as an alternative, a non-default html formatter with the name
	# 'plainhtml' produces a very simple html rendering of the view.
	#
	# the turtle, rdf/xml, and json renderers are builtin and don't
	# need specification in this config file.
	#
	; api:formatter
		[a api:HtmlFormatter
		; extras:className "com.epimorphics.lda.demo.Demo_HTML_RendererFactory"
		; api:name "plainhtml"
		; api:mimeType 'text/htmlx'
		]
	#
	# Magic variables.
	#
	# _suppress_ipto, if set to "yes", causes the isPrimaryTopicOf item
	# endpoints to be suppressed, to avoid tickling a stylesheet infelicity.
	#
	; api:variable [api:name "_suppress_ipto"; api:value "yes"]
    #
    # causes property names starting "hasX", with some capital letter
    # 'X', to start with 'x' instead, to bypass a stylesheet infelicity.
    #
    ; api:variable [api:name "_strip_has"; api:value "yes"]        
    #
    # don't suppress media-type selection of renderer
    # (if you need to, set it to "yes")
    #
    ; api:variable [api:name "_supress_media_type"; api:value "no"]
    
    ; api:variable [api:name "_sgvizler"; api:value "squeeze"]				
    .

####################################################################################    
############################# PERSONER ###############################################  

###################### En paginert liste over alle foaf filer ############################ 

spec:personer
	a api:ListEndpoint
	; rdfs:comment "Dette endepunktet viser personer fra Semantisk Web workshopen."
	; api:uriTemplate "person" 
	; api:selector [ 
   	  				api:filter	"type=Person"
		           ] 
	; api:formatter 
       [ a api:XsltFormatter 
	    ; api:name 'html'
			; api:stylesheet 'xsltsheets/result-osm-wide.xsl' 
      	    ; extras:metadataOptions "bindings,formats,versions,execution"
      	    ; api:mimeType 'text/html'
	    ]   
	; api:viewer api:describeViewer 
    ; api:viewer spec:basisViewer
    ; api:defaultViewer spec:basisViewer
	.


spec:basisViewer a api:Viewer 
    ; api:name "navneViewer"
    ; api:property foaf:name
    .

###################### ItemEndpoint for en spesifikk PERSON ########################

spec:person
      a api:ItemEndpoint
      ; api:uriTemplate "person/{id}"
      ; api:itemTemplate "http://localhost:8080/semwebworkshop/person/{id}"
      ; api:formatter 
      	  [ a api:XsltFormatter
	    ; api:name 'html'
		    ; api:stylesheet 'xsltsheets/result-osm-person.xsl' 
      	    ; extras:metadataOptions "bindings,formats,versions,execution"
      	    ; api:mimeType 'text/html'
	    ]              
      ; api:variable [ 
      		       api:name "person";
                       api:value "http://localhost:8080/semwebworkshop/person/{id}";
		       api:type rdfs:Resource;]
	#; api:viewer api:describeViewer 
	#; api:viewer spec:basisViewer
	#; api:viewer spec:personViewer;
    #; api:defaultViewer spec:basisViewer
	.

####################################################################################################
################################################ Vokabular #########################################
####################################################################################################


# The vocabulary declarations say which properties can be used in queries
# and by what short name those properties are known. If property P with short
# name Q has range type T, then a query parameters Q=V is translated to
# a WHERE clause fragment ?item P V' where V' is a literal which is V
# with type T. This is especially important for numbers and booleans.

#################### foaf #######################

foaf:Person api:label "Person" .
foaf:knows api:label "knows" .
foaf:name api:label "name" .
foaf:homepage api:label "homepage" .


################## RDF/s ###########################

rdf:type
    api:label "type"
    ; rdfs:range rdfs:Class
    .  


########################## Api ##########################
      
api:definition a rdf:Property
    ; api:label "definition"
    .  

api:definition a rdf:Property
    ; api:label "definition"
    .  
